# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R_MacOS_check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: OS=${{ matrix.config.os }} R=${{ matrix.config.r }} py=${{ matrix.config.python }}

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macOS-latest  , r: 'release', python: '3.10' }
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true
          # http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: actions/setup-python@v4
        if: matrix.config.python != 'debug'
        with:
          python-version: ${{ matrix.config.python }}

      - if: matrix.config.python == 'debug'
        name: setup python3-dbg
        run: |
          # sudo apt-get update
          sudo apt-get install -y python3-dbg python3-pip python3-venv
          # sudo rm -f /usr/bin/python3 /usr/bin/python
          sudo ln -sf /usr/bin/python3-dbg /usr/bin/python3
          sudo ln -sf /usr/bin/python3-dbg /usr/bin/python

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck local::.
          cache-version: 4
          upgrade: 'TRUE'

      - name: setup r-reticulate venv
        shell: Rscript {0}
        run: |

          library(reticulate)

          path_to_venv <- virtualenv_create(
            envname = "r-reticulate",
            python = Sys.which("python"), # placed on PATH by the setup-python action
            packages = c(
              "docutils", "pandas", "scipy", "matplotlib", "ipython",
              "tabulate", "plotly", "psutil", "kaleido", "wrapt"
            )
          )

          writeLines(
            paste0("RETICULATE_PYTHON=", virtualenv_python(path_to_venv)),
            Sys.getenv("GITHUB_ENV"))

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          virtualenv_install("r-reticulate", "deepforest")
          use_virtualenv("r-reticulate")
          library("reticulate")
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}
      